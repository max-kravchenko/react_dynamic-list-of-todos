{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["CompletedStatus","TodoList","todos","selectTodo","selectedTodoId","selectedStatus","selectedQuery","filteredTodos","filter","todo","title","toLowerCase","includes","completed","className","map","id","classNames","type","onClick","TodoFilter","selectStatus","selectQuery","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","trim","wait","delay","Promise","resolve","setTimeout","get","url","fullURL","then","fetch","res","json","Loader","useEffect","TodoModal","useState","find","someTodo","user","setUser","userId","userFromList","href","email","name","App","setTodos","isLoading","setIsLoading","todoId","setTodoId","status","setStatus","query","setQuery","todoList","finally","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.105149d0.chunk.js","sourcesContent":["enum CompletedStatus {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\ntype Props = {\n  selectedStatus: string;\n  selectStatus: (state: string) => void,\n  selectedQuery: string;\n  selectQuery: (search: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    selectStatus, selectedStatus, selectQuery, selectedQuery,\n  },\n) => {\n  const handleStatusSelection = (\n    event: { target: { value: string; }; },\n  ) => selectStatus(event.target.value);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedStatus}\n            onChange={handleStatusSelection}\n          >\n            <option value={CompletedStatus.All}> All </option>\n            <option value={CompletedStatus.Active}> Active </option>\n            <option value={CompletedStatus.Completed}> Completed </option>\n\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={selectedQuery}\n          onChange={(event) => selectQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {selectedQuery.trim()\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                aria-label=\"Search clearing\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => selectQuery('')}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n  selectedTodoId: number;\n  selectedStatus: string;\n  selectedQuery: string;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectTodo, selectedTodoId, selectedStatus, selectedQuery,\n}) => {\n  const searchedTodos = todos.filter(\n    (todo) => todo.title.toLowerCase().includes(selectedQuery.toLowerCase()),\n  );\n\n  const filteredTodos = searchedTodos.filter((todo) => {\n    switch (selectedStatus) {\n      case 'active':\n        return todo.completed === false;\n\n      case 'completed':\n        return todo.completed === true;\n\n      case 'all':\n      default:\n        return true;\n    }\n  });\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {filteredTodos.map((todo) => (\n            <>\n              <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classNames(\n                    'has-text-success',\n                    { 'has-text-danger': !todo.completed },\n                  )}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  {selectedTodoId === todo.id\n                    ? (\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button is-link\"\n                        type=\"button\"\n                        onClick={() => selectTodo(0)}\n                      >\n                        <span className=\"icon\">\n                          <i className=\"far fa-eye-slash\" />\n                        </span>\n                      </button>\n                    )\n                    : (\n                      <button\n                        data-cy=\"selectButton\"\n                        className=\"button\"\n                        type=\"button\"\n                        onClick={() => selectTodo(todo.id)}\n                      >\n                        <span className=\"icon\">\n                          <i className=\"far fa-eye\" />\n                        </span>\n                      </button>\n                    )}\n\n                </td>\n              </tr>\n            </>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect } from 'react';\nimport './Loader.scss';\nimport { wait } from '../../api';\n\nexport const Loader: React.FC = () => {\n  useEffect(() => {\n    wait(500);\n  });\n\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodoId: number;\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodoId, todos, selectTodo,\n}) => {\n  const [someTodo] = useState(\n    todos.find((todo) => todo.id === selectedTodoId),\n  );\n  const [user, setUser] = useState<User>();\n  // const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    getUser(someTodo?.userId || 0)\n      .then((userFromList) => {\n        setUser(userFromList);\n      });\n  }, []);\n\n  const handleWindowClose = () => {\n    selectTodo(0);\n  };\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div\n          className=\"modal-card\"\n        >\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${someTodo?.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              aria-label=\"Close window\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleWindowClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {someTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames(\n                { 'has-text-success': someTodo?.completed },\n                { 'has-text-danger': !someTodo?.completed },\n              )}\n              >\n                {someTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [todoId, setTodoId] = useState(0);\n  const [status, setStatus] = useState('All');\n\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((todoList) => {\n        setTodos(todoList);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedStatus={status}\n                selectStatus={setStatus}\n                selectQuery={setQuery}\n                selectedQuery={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    selectedQuery={query}\n                    selectedStatus={status}\n                    todos={todos}\n                    selectedTodoId={todoId}\n                    selectTodo={setTodoId}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {todoId && (\n        <TodoModal\n          selectedTodoId={todoId}\n          todos={todos}\n          selectTodo={setTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}